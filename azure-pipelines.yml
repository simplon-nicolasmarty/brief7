# Spécifie le démarrage du pipeline
trigger:
- main

# Définit les variables d'environnement du pipeline
variables:
  # Nom de l'image Docker
  imageName: azure_voting_app
  # Nom du répertoire de l'image Docker
  imageRepo: simplonasa
  # Nom de l'application Kubernetes
  appName: K8S
  # Nom du cluster Kubernetes AKS
  clusterName: Nicolas-AKS
  # ID de l'abonnement Azure
  subscriptionId: a2e466aa-4f86-4545-b5b8-97da7c8febf3
  # ID de ressource de l'abonnement Azure
  resourceGroup: Nicolas

# Définit les étapes du pipeline
stages:
  # Étape de vérification de la version de l'image Docker
  - stage: CheckImageVersion
    jobs:
      - job: CheckImageVersion
        steps:
          - task: Docker@2
            displayName: Check Image Version
          - script: |
              # Récupère le numéro de version actuel de l'image Docker
              currentImageVersion=$(curl -s https://hub.docker.com/r/simplonasa/azure_voting_app/tags | jq -r '."results"[]["name"]')
              # Enregistre le numéro de version dans une variable d'environnement
              echo "##vso[task.setvariable variable=currentImageVersion]$currentImageVersion"
            displayName: Get Current Image Version
          - script: |
              # Récupère le numéro de version précédent de l'image Docker à partir d'une variable d'environnement
              previousImageVersion=$(echo "$PREVIOUS_IMAGE_VERSION")
              # Vérifie si le numéro de version a changé
              if [ "$previousImageVersion" != "$currentImageVersion" ]; then
                # Enregistre le numéro de version dans une variable d'environnement
                echo "##vso[task.setvariable variable=imageUpdated]true"
              else
                # Enregistre le numéro de version dans une variable d'environnement
                echo "##vso[task.setvariable variable=imageUpdated]false"
              fi
            displayName: Check If Image Version Has Changed
  # Étape de déploiement de l'image Docker
  - stage: DeployImage
    # N'exécute cette étape que si la variable d'environnement imageUpdated est égale à true
    condition: eq(variables['imageUpdated'], 'true')
    jobs:
      - job: DeployImage
        steps:
          - task: AzureCLI@2
            displayName: Login to Azure
            inputs:
              azureSubscription: "a1f74e2d-ec58-4f9a-a112-088e3469febb"
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Connecte à l'abonnement Azure
                az login --service-principal -u "nmarty.ext@simplonformations.onmicrosoft.com" -p $(servicePrincipalKey) --tenant "a2e466aa-4f86-4545-b5b8-97da7c8febf3"
                # Sélectionne l'abonnement Azure
                az account set --subscription "a1f74e2d-ec58-4f9a-a112-088e3469febb"
          - task: AzureCLI@2
            displayName: Set Context to AKS Cluster
            inputs:
              azureSubscription: "a1f74e2d-ec58-4f9a-a112-088e3469febb"
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Récupère l'ID de connexion du cluster Kubernetes AKS
                clusterResourceId=$(az aks show -g Nicolas -n Nicolas-AKS --query id -o tsv)
                # Définit le contexte de l'interface de ligne de commande Kubernetes sur le cluster Kubernetes AKS
                az aks get-credentials --resource-group Nicolas --name Nicolas-AKS